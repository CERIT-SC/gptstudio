[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported repo owner, James Wade. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to gptstudio","title":"Contributing to gptstudio","text":"outlines propose change gptstudio. based tidyverse team’s contributing guide.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to gptstudio","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to gptstudio","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. Maybe work together! ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). aren’t sure create reprex (can tricky gptstudio interactive tools), please just describe issue best can.","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to gptstudio","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"MichelNivard/gptstudio\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to gptstudio","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to gptstudio","text":"Please note gptstudio project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 gptstudio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with gptstudio","title":"Getting help with gptstudio","text":"Thanks using gptstudio! eager excited help. Thank trying package! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with gptstudio","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with gptstudio","text":"Armed reprex, next step figure ask. ’s bug: ’re right place, file issue. ’s question: sure ’s gptstudio another R question. Please file issue. package grows popularity, may try Posit Community StackOverflow. people answer questions. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Nivard. Author, copyright holder. James Wade. Author, maintainer, copyright holder. Samuel Calderon. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nivard M, Wade J, Calderon S (2023). gptstudio: Use Large Language Models Directly Development Environment. https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/.","code":"@Manual{,   title = {gptstudio: Use Large Language Models Directly in your Development Environment},   author = {Michel Nivard and James Wade and Samuel Calderon},   year = {2023},   note = {https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/}, }"},{"path":"/index.html","id":"gptstudio-","dir":"","previous_headings":"","what":"Use Large Language Models Directly in your Development Environment","title":"Use Large Language Models Directly in your Development Environment","text":"goal gptstudio R programmers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion. addins, tailored R developers, also see sister package: gpttools","code":""},{"path":"/index.html","id":"install-the-addins-from-this-package","dir":"","previous_headings":"","what":"Install the addins from this package:","title":"Use Large Language Models Directly in your Development Environment","text":"get bug fix use feature development version, can install development version package GitHub.","code":"install.packages(\"gptstudio\") # install.packages(\"pak\") pak::pak(\"MichelNivard/gptstudio\")"},{"path":"/index.html","id":"privacy-notice-for-gptstudio","dir":"","previous_headings":"","what":"Privacy Notice for gptstudio","title":"Use Large Language Models Directly in your Development Environment","text":"privacy notice applicable R package utilizes GPT-3 GPT-3.5 API provided OpenAI. using package, agree adhere privacy terms conditions set OpenAI.","code":""},{"path":"/index.html","id":"data-sharing-with-openai","dir":"","previous_headings":"Privacy Notice for gptstudio","what":"Data Sharing with OpenAI","title":"Use Large Language Models Directly in your Development Environment","text":"using R package, text code highlight/select cursor, prompt enter within built-applications, sent OpenAI part API request. data sharing governed privacy notice, rules, exceptions agreed OpenAI creating account.","code":""},{"path":"/index.html","id":"security-and-data-usage-by-openai","dir":"","previous_headings":"Privacy Notice for gptstudio","what":"Security and Data Usage by OpenAI","title":"Use Large Language Models Directly in your Development Environment","text":"guarantee security data send OpenAI via API, can provide details OpenAI processes uses data. However, OpenAI stated utilize prompts results enhance AI models, outlined terms use. can opt-data usage contacting OpenAI directly making explicit request.","code":""},{"path":"/index.html","id":"limiting-data-sharing","dir":"","previous_headings":"Privacy Notice for gptstudio","what":"Limiting Data Sharing","title":"Use Large Language Models Directly in your Development Environment","text":"R package designed share text code specifically highlight/select include prompt built-applications. elements R environment shared. responsibility ensure accidentally share sensitive data OpenAI. IMPORTANT: maintain privacy data, highlight, include prompt, otherwise upload sensitive data, code, text remain confidential.","code":""},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Use Large Language Models Directly in your Development Environment","text":"Make OpenAI account. Create OpenAI API key use package. Set API key Rstudio","code":""},{"path":"/index.html","id":"configuring-openai-api-key","dir":"","previous_headings":"Prerequisites","what":"Configuring OpenAI API Key","title":"Use Large Language Models Directly in your Development Environment","text":"interact OpenAI API, ’s required valid OPENAI_API_KEY environment variable. steps configure . can establish environment variable globally including project’s .Renviron file. approach ensures environment variable persists across sessions Shiny app runs background. set commands open .Renviron file modification: wish set variable temporarily single session, use command, substituting \"<APIKEY>\" actual OpenAI API key: persistent setting loads every time launch project, add following line .Renviron, replacing \"<APIKEY>\" actual API key: Caution: ’re using version control systems like GitHub GitLab, remember include .Renviron .gitignore file prevent exposing API key! Important Note: OpenAI API function without valid payment details entered OpenAI account. restriction imposed OpenAI unrelated package.","code":"require(usethis) edit_r_environ() Sys.setenv(OPENAI_API_KEY = \"<APIKEY>\") OPENAI_API_KEY=\"<APIKEY>\""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Use Large Language Models Directly in your Development Environment","text":"examples use.","code":""},{"path":"/index.html","id":"chatgpt-in-rstudio","dir":"","previous_headings":"Usage","what":"ChatGPT in RStudio","title":"Use Large Language Models Directly in your Development Environment","text":"Addins > GPTSTUDIO > ChatGPT Type question. Click “Send” button Ask questions Copy try code ChatGPT addin supports internationalization. can set “GPTSTUDIO_LANGUAGE” environmental variable language preference (.e. GPTSTUDIO_LANGUAGE=\"es\" spanish). See full list supported languages translation file (\"inst/translations/translation.json\").","code":""},{"path":"/index.html","id":"provide-your-own-instructions-in-r-r-markdown-or-quarto-files","dir":"","previous_headings":"Usage","what":"Provide your own instructions in R, R Markdown, or Quarto files","title":"Use Large Language Models Directly in your Development Environment","text":"Addins > GPTSTUDIO > ChatGPT Source: Apply edit desire can dream selection code text.","code":""},{"path":"/index.html","id":"spelling-ang-grammar-check","dir":"","previous_headings":"Usage","what":"Spelling ang grammar check","title":"Use Large Language Models Directly in your Development Environment","text":"Addins > GPTSTUDIO > Spelling Grammar: Takes selected text sends OpenAI’s best model instructs return spelling grammar checked version. spelling","code":""},{"path":"/index.html","id":"comment-your-code","dir":"","previous_headings":"Usage","what":"Comment your code:","title":"Use Large Language Models Directly in your Development Environment","text":"Addins > GPTSTUDIO > Comment code: Takes selected text sends OpenAI prompt code specific model work , asks version comment added explaining code line line. add comments code","code":""},{"path":"/index.html","id":"azure-openai-service","dir":"","previous_headings":"","what":"Azure OpenAI Service","title":"Use Large Language Models Directly in your Development Environment","text":"configure gptstudio work using Azure OpenAI service, need provide configuration details .Renviron file. Specifically, gptstudio looks five environment variables: AZURE_OPENAI_TASK AZURE_OPENAI_ENDPOINT AZURE_OPENAI_DEPLOYMENT_NAME AZURE_OPENAI_KEY AZURE_OPENAI_API_VERSION ’s can add details .Renviron file: Locate .Renviron file usethis::edit_r_environ(). Add environment variable details: Add new line variable need set following format: VARIABLE_NAME=“YOUR_VALUE”. Replace VARIABLE_NAME name environment variable YOUR_VALUE actual value want set. example, set API key line like : need environment variables expected function. .Renviron file look something like : Save Close .Renviron: adding environment variables, save .Renviron file close . need restart R session make sure new environment variables loaded properly. Remember replace your_task_code, your_endpoint_url, your_deployment_name, your_api_key, your_api_version actual Azure OpenAI details. can retrieve details Azure OpenAI service account. information Azure OpenAI configuration, refer Microsoft quickstart guide.","code":"AZURE_OPENAI_KEY=\"your_actual_key_goes_here\" AZURE_OPENAI_TASK=\"your_task_code\" AZURE_OPENAI_ENDPOINT=\"your_endpoint_url\" AZURE_OPENAI_DEPLOYMENT_NAME=\"your_deployment_name\" AZURE_OPENAI_KEY=\"your_api_key\" AZURE_OPENAI_API_VERSION=\"your_api_version\""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Use Large Language Models Directly in your Development Environment","text":"Please note gptstudio project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/addin_chatgpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Chat GPT\nRun the Chat GPT Shiny App as a background job and show it in the viewer pane — addin_chatgpt","title":"Run Chat GPT\nRun the Chat GPT Shiny App as a background job and show it in the viewer pane — addin_chatgpt","text":"Run Chat GPT Run Chat GPT Shiny App background job show viewer pane","code":""},{"path":"/reference/addin_chatgpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Chat GPT\nRun the Chat GPT Shiny App as a background job and show it in the viewer pane — addin_chatgpt","text":"","code":"addin_chatgpt(host = getOption(\"shiny.host\", \"127.0.0.1\"))"},{"path":"/reference/addin_chatgpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Chat GPT\nRun the Chat GPT Shiny App as a background job and show it in the viewer pane — addin_chatgpt","text":"host IPv4 address application listen . Defaults shiny.host option, set, \"127.0.0.1\" . See Details.","code":""},{"path":"/reference/addin_chatgpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Chat GPT\nRun the Chat GPT Shiny App as a background job and show it in the viewer pane — addin_chatgpt","text":"function return value.","code":""},{"path":"/reference/addin_chatgpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Chat GPT\nRun the Chat GPT Shiny App as a background job and show it in the viewer pane — addin_chatgpt","text":"","code":"# Call the function as an RStudio addin if (FALSE) { addin_chatgpt() }"},{"path":"/reference/addin_chatgpt_in_source.html","id":null,"dir":"Reference","previous_headings":"","what":"ChatGPT in Source — addin_chatgpt_in_source","title":"ChatGPT in Source — addin_chatgpt_in_source","text":"Call function Rstudio addin ask GPT improve spelling grammar selected text.","code":""},{"path":"/reference/addin_chatgpt_in_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatGPT in Source — addin_chatgpt_in_source","text":"","code":"addin_chatgpt_in_source()"},{"path":"/reference/addin_chatgpt_in_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ChatGPT in Source — addin_chatgpt_in_source","text":"function return value.","code":""},{"path":"/reference/addin_chatgpt_in_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChatGPT in Source — addin_chatgpt_in_source","text":"","code":"# Select some text in a source file # Then call the function as an RStudio addin if (FALSE) { addin_chatgpt_in_source() }"},{"path":"/reference/addin_comment_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Comment Code Addin — addin_comment_code","title":"Comment Code Addin — addin_comment_code","text":"Call function Rstudio addin ask GPT add comments code","code":""},{"path":"/reference/addin_comment_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comment Code Addin — addin_comment_code","text":"","code":"addin_comment_code()"},{"path":"/reference/addin_comment_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comment Code Addin — addin_comment_code","text":"function return value.","code":""},{"path":"/reference/addin_comment_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comment Code Addin — addin_comment_code","text":"","code":"# Open a R file in Rstudio # Then call the function as an RStudio addin if (FALSE) { addin_comment_code() }"},{"path":"/reference/addin_spelling_grammar.html","id":null,"dir":"Reference","previous_headings":"","what":"Spelling and Grammar Addin — addin_spelling_grammar","title":"Spelling and Grammar Addin — addin_spelling_grammar","text":"Call function Rstudio addin ask GPT improve spelling grammar selected text.","code":""},{"path":"/reference/addin_spelling_grammar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spelling and Grammar Addin — addin_spelling_grammar","text":"","code":"addin_spelling_grammar()"},{"path":"/reference/addin_spelling_grammar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spelling and Grammar Addin — addin_spelling_grammar","text":"function return value.","code":""},{"path":"/reference/addin_spelling_grammar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spelling and Grammar Addin — addin_spelling_grammar","text":"","code":"# Select some text in Rstudio # Then call the function as an RStudio addin if (FALSE) { addin_spelling_grammar() }"},{"path":"/reference/chat_create_system_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create system prompt — chat_create_system_prompt","title":"Create system prompt — chat_create_system_prompt","text":"creates system prompt based user defined parameters.","code":""},{"path":"/reference/chat_create_system_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create system prompt — chat_create_system_prompt","text":"","code":"chat_create_system_prompt(   style = c(\"tidyverse\", \"base\", \"no preference\", NULL),   skill = c(\"beginner\", \"intermediate\", \"advanced\", \"genius\", NULL),   task = c(\"coding\", \"general\", \"advanced developer\", \"custom\"),   custom_prompt = NULL,   in_source )"},{"path":"/reference/chat_create_system_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create system prompt — chat_create_system_prompt","text":"style character string indicating preferred coding style, default \"tidyverse\". skill self-described skill level programmer, default \"beginner\" task task performed: \"coding\", \"general\", \"advanced developer\". custom_prompt optional custom prompt displayed. in_source Whether add instructions act source script.","code":""},{"path":"/reference/chat_create_system_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create system prompt — chat_create_system_prompt","text":"string","code":""},{"path":"/reference/chat_history_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append to chat history — chat_history_append","title":"Append to chat history — chat_history_append","text":"appends new response chat history","code":""},{"path":"/reference/chat_history_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append to chat history — chat_history_append","text":"","code":"chat_history_append(history, role, content)"},{"path":"/reference/chat_history_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append to chat history — chat_history_append","text":"history List containing previous responses. role Author message. One c(\"user\", \"assistant\") content Content message. user probably comes interactive input.","code":""},{"path":"/reference/chat_history_append.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append to chat history — chat_history_append","text":"list chat messages","code":""},{"path":"/reference/chat_message_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default chat message — chat_message_default","title":"Default chat message — chat_message_default","text":"Default chat message","code":""},{"path":"/reference/chat_message_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default chat message — chat_message_default","text":"","code":"chat_message_default(translator = create_translator())"},{"path":"/reference/chat_message_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default chat message — chat_message_default","text":"translator Translator shiny.i18n::Translator","code":""},{"path":"/reference/chat_message_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default chat message — chat_message_default","text":"default chat message welcoming users.","code":""},{"path":"/reference/check_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API setup — check_api","title":"Check API setup — check_api","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid. function re-check API already validated current session.","code":""},{"path":"/reference/check_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API setup — check_api","text":"","code":"check_api()"},{"path":"/reference/check_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API setup — check_api","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborts.","code":""},{"path":"/reference/check_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check API setup — check_api","text":"","code":"# Call the function to check the API key if (FALSE) { check_api() }"},{"path":"/reference/check_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check connection to OpenAI's API works — check_api_connection","title":"Check connection to OpenAI's API works — check_api_connection","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid.","code":""},{"path":"/reference/check_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"check_api_connection(api_key, update_api = TRUE, verbose = FALSE)"},{"path":"/reference/check_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check connection to OpenAI's API works — check_api_connection","text":"api_key API key. update_api Whether attempt update api invalid verbose Whether provide information API connection","code":""},{"path":"/reference/check_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check connection to OpenAI's API works — check_api_connection","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborted.","code":""},{"path":"/reference/check_api_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"# Call the function with an API key if (FALSE) { check_api_connection(\"my_api_key\") } # Call the function with an API key and avoid updating the API key if (FALSE) { check_api_connection(\"my_api_key\", update_api = FALSE) }"},{"path":"/reference/check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key — check_api_key","title":"Check API key — check_api_key","text":"function checks whether API key provided argument correct format.","code":""},{"path":"/reference/check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key — check_api_key","text":"","code":"check_api_key(api_key, update_api = TRUE)"},{"path":"/reference/check_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key — check_api_key","text":"api_key API key. update_api Whether attempt update api invalid","code":""},{"path":"/reference/check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key — check_api_key","text":"Nothing returned. API key correct format, success message printed. API key correct format, error message printed function aborts.","code":""},{"path":"/reference/check_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check API key — check_api_key","text":"","code":"# Call the function with an API key if (FALSE) { check_api_key(\"my_api_key\") } # Call the function with an API key and avoid updating the API key if (FALSE) { check_api_key(\"my_api_key\", update_api = FALSE) }"},{"path":"/reference/create_chat_app_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Chat App Theme — create_chat_app_theme","title":"Chat App Theme — create_chat_app_theme","text":"Create bslib theme matches user's RStudio IDE theme.","code":""},{"path":"/reference/create_chat_app_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chat App Theme — create_chat_app_theme","text":"","code":"create_chat_app_theme(ide_colors = get_ide_theme_info())"},{"path":"/reference/create_chat_app_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chat App Theme — create_chat_app_theme","text":"ide_colors List containing colors IDE theme.","code":""},{"path":"/reference/create_chat_app_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chat App Theme — create_chat_app_theme","text":"bslib theme","code":""},{"path":"/reference/create_completion_anthropic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text completions using Anthropic's API — create_completion_anthropic","title":"Generate text completions using Anthropic's API — create_completion_anthropic","text":"Generate text completions using Anthropic's API","code":""},{"path":"/reference/create_completion_anthropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text completions using Anthropic's API — create_completion_anthropic","text":"","code":"create_completion_anthropic(   prompt,   history = NULL,   model = \"claude-1\",   max_tokens_to_sample = 256,   key = Sys.getenv(\"ANTHROPIC_API_KEY\") )"},{"path":"/reference/create_completion_anthropic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text completions using Anthropic's API — create_completion_anthropic","text":"prompt prompt generating completions history list previous chat responses model model use generating text. default, function try use \"claude-1\". max_tokens_to_sample maximum number tokens generate. Defaults 256. key API key accessing Anthropic's API. default, function try use ANTHROPIC_API_KEY environment variable.","code":""},{"path":"/reference/create_completion_anthropic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text completions using Anthropic's API — create_completion_anthropic","text":"list generated completions information returned API.","code":""},{"path":"/reference/create_completion_anthropic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text completions using Anthropic's API — create_completion_anthropic","text":"","code":"if (FALSE) { create_completion_anthropic(   prompt = \"\\n\\nHuman: Hello, world!\\n\\nAssistant:\",   model = \"claude-1\",   max_tokens_to_sample = 256 ) }"},{"path":"/reference/create_completion_azure_openai.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text using Azure OpenAI's API — create_completion_azure_openai","title":"Generate text using Azure OpenAI's API — create_completion_azure_openai","text":"Use function generate text completions using OpenAI's API.","code":""},{"path":"/reference/create_completion_azure_openai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text using Azure OpenAI's API — create_completion_azure_openai","text":"","code":"create_completion_azure_openai(   prompt,   task = Sys.getenv(\"AZURE_OPENAI_TASK\"),   base_url = Sys.getenv(\"AZURE_OPENAI_ENDPOINT\"),   deployment_name = Sys.getenv(\"AZURE_OPENAI_DEPLOYMENT_NAME\"),   token = Sys.getenv(\"AZURE_OPENAI_KEY\"),   api_version = Sys.getenv(\"AZURE_OPENAI_API_VERSION\") )"},{"path":"/reference/create_completion_azure_openai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text using Azure OpenAI's API — create_completion_azure_openai","text":"prompt list use prompt generating completions task character string API task. Defaults Azure OpenAI task environment variables specified. base_url character string base url. defaults Azure OpenAI endpoint environment variables specified. deployment_name character string deployment name. default Azure OpenAI deployment name environment variables specified. token character string API key. default Azure OpenAI API key environment variables specified. api_version character string API version. default Azure OpenAI API version environment variables specified.","code":""},{"path":"/reference/create_completion_azure_openai.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text using Azure OpenAI's API — create_completion_azure_openai","text":"list generated completions information returned API","code":""},{"path":[]},{"path":"/reference/create_completion_huggingface.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text completions using HuggingFace's API — create_completion_huggingface","title":"Generate text completions using HuggingFace's API — create_completion_huggingface","text":"Generate text completions using HuggingFace's API","code":""},{"path":"/reference/create_completion_huggingface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text completions using HuggingFace's API — create_completion_huggingface","text":"","code":"create_completion_huggingface(   prompt,   history = NULL,   model = \"tiiuae/falcon-7b-instruct\",   token = Sys.getenv(\"HF_API_KEY\"),   max_new_tokens = 250 )"},{"path":"/reference/create_completion_huggingface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text completions using HuggingFace's API — create_completion_huggingface","text":"prompt prompt generating completions history list previous chat responses model model use generating text token API key accessing HuggingFace's API. default, function try use HF_API_KEY environment variable. max_new_tokens Maximum number tokens generate, defaults 250","code":""},{"path":"/reference/create_completion_huggingface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text completions using HuggingFace's API — create_completion_huggingface","text":"list generated completions information returned API.","code":""},{"path":"/reference/create_completion_huggingface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text completions using HuggingFace's API — create_completion_huggingface","text":"","code":"if (FALSE) { create_completion_huggingface(   model = \"gpt2\",   prompt = \"Hello world!\" ) }"},{"path":"/reference/create_completion_palm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text completions using PALM (MakerSuite)'s API — create_completion_palm","title":"Generate text completions using PALM (MakerSuite)'s API — create_completion_palm","text":"Generate text completions using PALM (MakerSuite)'s API","code":""},{"path":"/reference/create_completion_palm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text completions using PALM (MakerSuite)'s API — create_completion_palm","text":"","code":"create_completion_palm(   prompt,   model = \"text-bison-001\",   key = Sys.getenv(\"PALM_API_KEY\"),   temperature = 0.5,   candidate_count = 1 )"},{"path":"/reference/create_completion_palm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text completions using PALM (MakerSuite)'s API — create_completion_palm","text":"prompt prompt generating completions model model use generating text. default, function try use \"text-bison-001\" key API key accessing PALM (MakerSuite)'s API. default, function try use PALM_API_KEY environment variable. temperature temperature control randomness model's output candidate_count number completion candidates generate","code":""},{"path":"/reference/create_completion_palm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text completions using PALM (MakerSuite)'s API — create_completion_palm","text":"list generated completions information returned API.","code":""},{"path":"/reference/create_completion_palm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text completions using PALM (MakerSuite)'s API — create_completion_palm","text":"","code":"if (FALSE) { create_completion_palm(   prompt = list(text = \"Write a story about a magic backpack\"),   temperature = 1.0,   candidate_count = 3 ) }"},{"path":"/reference/create_ide_matching_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Chat message colors in RStudio — create_ide_matching_colors","title":"Chat message colors in RStudio — create_ide_matching_colors","text":"returns list color properties chat message","code":""},{"path":"/reference/create_ide_matching_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chat message colors in RStudio — create_ide_matching_colors","text":"","code":"create_ide_matching_colors(role, ide_colors = get_ide_theme_info())"},{"path":"/reference/create_ide_matching_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chat message colors in RStudio — create_ide_matching_colors","text":"role role message author ide_colors List containing colors IDE theme.","code":""},{"path":"/reference/create_ide_matching_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chat message colors in RStudio — create_ide_matching_colors","text":"list","code":""},{"path":"/reference/create_tmp_job_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a temporary job script — create_tmp_job_script","title":"Create a temporary job script — create_tmp_job_script","text":"function creates temporary R script file runs Shiny application specified directory specified port host.","code":""},{"path":"/reference/create_tmp_job_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a temporary job script — create_tmp_job_script","text":"","code":"create_tmp_job_script(appDir, port, host)"},{"path":"/reference/create_tmp_job_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a temporary job script — create_tmp_job_script","text":"appDir application run. one following: directory containing server.R, plus, either ui.R www directory contains file index.html. directory containing app.R. .R file containing Shiny application, ending expression produces Shiny app object. list ui server components. Shiny app object created shinyApp(). port TCP port application listen . port specified, shiny.port option set (options(shiny.port = XX)), port used. Otherwise, use random port 3000:8000, excluding ports blocked Google Chrome considered unsafe: 3659, 4045, 5060, 5061, 6000, 6566, 6665:6669 6697. twenty random ports tried. host IPv4 address application listen . Defaults shiny.host option, set, \"127.0.0.1\" . See Details.","code":""},{"path":"/reference/create_tmp_job_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a temporary job script — create_tmp_job_script","text":"string containing path temporary job script","code":""},{"path":"/reference/create_translator.html","id":null,"dir":"Reference","previous_headings":"","what":"Internationalization for the ChatGPT addin — create_translator","title":"Internationalization for the ChatGPT addin — create_translator","text":"language can set via options(\"gptstudio.language\" = \"<language>\") (defaults \"en\").","code":""},{"path":"/reference/create_translator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internationalization for the ChatGPT addin — create_translator","text":"","code":"create_translator(language = getOption(\"gptstudio.language\"))"},{"path":"/reference/create_translator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internationalization for the ChatGPT addin — create_translator","text":"language language found translation JSON file.","code":""},{"path":"/reference/create_translator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internationalization for the ChatGPT addin — create_translator","text":"Translator shiny.i18n::Translator","code":""},{"path":"/reference/get_available_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"List supported endpoints — get_available_endpoints","title":"List supported endpoints — get_available_endpoints","text":"Get list endpoints supported gptstudio.","code":""},{"path":"/reference/get_available_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List supported endpoints — get_available_endpoints","text":"","code":"get_available_endpoints()"},{"path":"/reference/get_available_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List supported endpoints — get_available_endpoints","text":"character vector","code":""},{"path":"/reference/get_available_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List supported endpoints — get_available_endpoints","text":"","code":"get_available_endpoints() #> [1] \"completions\"      \"chat/completions\" \"edits\"            \"embeddings\"       #> [5] \"models\""},{"path":"/reference/get_available_models.html","id":null,"dir":"Reference","previous_headings":"","what":"List supported models — get_available_models","title":"List supported models — get_available_models","text":"Get list models supported OpenAI API.","code":""},{"path":"/reference/get_available_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List supported models — get_available_models","text":"","code":"get_available_models(service)"},{"path":"/reference/get_available_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List supported models — get_available_models","text":"service API service","code":""},{"path":"/reference/get_available_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List supported models — get_available_models","text":"character vector","code":""},{"path":"/reference/get_available_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List supported models — get_available_models","text":"","code":"get_available_endpoints() #> [1] \"completions\"      \"chat/completions\" \"edits\"            \"embeddings\"       #> [5] \"models\""},{"path":"/reference/get_ide_theme_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get IDE theme information. — get_ide_theme_info","title":"Get IDE theme information. — get_ide_theme_info","text":"function returns list current IDE theme's information.","code":""},{"path":"/reference/get_ide_theme_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get IDE theme information. — get_ide_theme_info","text":"","code":"get_ide_theme_info()"},{"path":"/reference/get_ide_theme_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get IDE theme information. — get_ide_theme_info","text":"list three components: is_dark boolean indicating whether current IDE theme dark. bg current IDE theme's background color. fg current IDE theme's foreground color.","code":""},{"path":"/reference/gpt_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"ChatGPT in RStudio — gpt_chat","title":"ChatGPT in RStudio — gpt_chat","text":"function uses ChatGPT API tailored user-provided style skill level.","code":""},{"path":"/reference/gpt_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatGPT in RStudio — gpt_chat","text":"","code":"gpt_chat(   history,   style = getOption(\"gptstudio.code_style\"),   skill = getOption(\"gptstudio.skill\"),   model = getOption(\"gptstudio.model\") )"},{"path":"/reference/gpt_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatGPT in RStudio — gpt_chat","text":"history list previous chat responses style character string indicating preferred coding style, default \"tidyverse\". skill self-described skill level programmer, default \"beginner\" model name GPT model use.","code":""},{"path":"/reference/gpt_chat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ChatGPT in RStudio — gpt_chat","text":"list containing instructions answering question, context question asked, suggested answer.","code":""},{"path":"/reference/gpt_chat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChatGPT in RStudio — gpt_chat","text":"","code":"if (FALSE) { # Example 1: Get help with a tidyverse question tidyverse_query <- \"How can I filter rows of a data frame?\" tidyverse_response <- gpt_chat(   query = tidyverse_query,   style = \"tidyverse\",   skill = \"beginner\" ) print(tidyverse_response)  # Example 2: Get help with a base R question base_r_query <- \"How can I merge two data frames?\" base_r_response <- gpt_chat(   query = base_r_query,   style = \"base\",   skill = \"intermediate\" ) print(base_r_response)  # Example 3: No style preference no_preference_query <- \"What is the best way to handle missing values in R?\" no_preference_response <- gpt_chat(   query = no_preference_query,   style = \"no preference\",   skill = \"advanced\" ) print(no_preference_response) }"},{"path":"/reference/gpt_chat_in_source.html","id":null,"dir":"Reference","previous_headings":"","what":"ChatGPT in Source — gpt_chat_in_source","title":"ChatGPT in Source — gpt_chat_in_source","text":"Provides functionality gpt_chat() minor modifications give useful output source (.e., *.R) file.","code":""},{"path":"/reference/gpt_chat_in_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChatGPT in Source — gpt_chat_in_source","text":"","code":"gpt_chat_in_source(   history = NULL,   task = NULL,   style = getOption(\"gptstudio.code_style\"),   skill = getOption(\"gptstudio.skill\") )"},{"path":"/reference/gpt_chat_in_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChatGPT in Source — gpt_chat_in_source","text":"history list previous chat responses task Specific instructions provide model system prompt style character string indicating preferred coding style, default \"tidyverse\". skill self-described skill level programmer, default \"beginner\"","code":""},{"path":"/reference/gpt_chat_in_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ChatGPT in Source — gpt_chat_in_source","text":"list containing instructions answering question, context question asked, suggested answer.","code":""},{"path":"/reference/gpt_chat_in_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChatGPT in Source — gpt_chat_in_source","text":"","code":"if (FALSE) { # Example 1: Get help with a tidyverse question in a source file # Select the following code comment in RStudio and run gpt_chat_in_source() # How can I filter rows of a data frame? tidyverse_response <- gpt_chat_in_source(   style = \"tidyverse\",   skill = \"beginner\" )  # Example 2: Get help with a base R question in a source file # Select the following code comment in RStudio and run gpt_chat_in_source() # How can I merge two data frames? base_r_response <- gpt_chat_in_source(style = \"base\", skill = \"intermediate\")  # Example 3: No style preference in a source file # Select the following code comment in RStudio and run gpt_chat_in_source() # What is the best way to handle missing values in R? no_preference_response <- gpt_chat_in_source(   style = \"no preference\",   skill = \"advanced\" ) }"},{"path":"/reference/gptstudio-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gptstudio: Use Large Language Models Directly in your Development Environment — gptstudio-package","title":"gptstudio: Use Large Language Models Directly in your Development Environment — gptstudio-package","text":"Large language models readily accessible via API. package lowers barrier use API inside development environment. API, see https://platform.openai.com/docs/introduction.","code":""},{"path":[]},{"path":"/reference/gptstudio-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gptstudio: Use Large Language Models Directly in your Development Environment — gptstudio-package","text":"Maintainer: James Wade github@jameshwade.com (ORCID) [copyright holder] Authors: Michel Nivard m.g.nivard@vu.nl [copyright holder] Samuel Calderon samuel.calderon@uarm.pe (ORCID)","code":""},{"path":"/reference/gptstudio_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Job — gptstudio_job","title":"Perform Job — gptstudio_job","text":"Combined job build skeleton, perform api request, process response","code":""},{"path":"/reference/gptstudio_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Job — gptstudio_job","text":"","code":"gptstudio_job(   skeleton = gptstudio_create_skeleton(),   skill = getOption(\"gptstudio.skill\"),   style = getOption(\"gptstudio.code_style\"),   task = getOption(\"gptstudio.task\"),   custom_prompt = getOption(\"gptstudio.custom_prompt\") )"},{"path":"/reference/gptstudio_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Job — gptstudio_job","text":"skeleton GPT Studio request skeleton object. skill skill level user chat conversation. can set \"gptstudio.skill\" option. Default \"gptstudio.skill\" option. Options \"beginner\", \"intermediate\", \"advanced\", \"genius\". style style code use. Applicable styles can retrieved \"gptstudio.code_style\" option. Default \"gptstudio.code_style\" option. Options \"base\", \"tidyverse\", \"preference\". task Specifies task assistant help . Default \"coding\". Others \"general\", \"advanced developer\", \"custom\". custom_prompt custom prompt may used guide AI responses. Default NULL. content provided system prompt.","code":""},{"path":"/reference/gptstudio_request_perform.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform API Request — gptstudio_request_perform","title":"Perform API Request — gptstudio_request_perform","text":"function provides generic interface calling different APIs (e.g., OpenAI, HuggingFace, PALM (MakerSuite)). dispatches actual API calls relevant method based class skeleton argument.","code":""},{"path":"/reference/gptstudio_request_perform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform API Request — gptstudio_request_perform","text":"","code":"gptstudio_request_perform(skeleton, ...)"},{"path":"/reference/gptstudio_request_perform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform API Request — gptstudio_request_perform","text":"skeleton gptstudio_request_skeleton object ... Extra arguments (e.g., stream_handler)","code":""},{"path":"/reference/gptstudio_request_perform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform API Request — gptstudio_request_perform","text":"gptstudio_response_skeleton object","code":""},{"path":"/reference/gptstudio_request_perform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform API Request — gptstudio_request_perform","text":"","code":"if (FALSE) { gptstudio_request_perform(gptstudio_skeleton) }"},{"path":"/reference/gptstudio_response_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Call API — gptstudio_response_process","title":"Call API — gptstudio_response_process","text":"function provides generic interface calling different APIs (e.g., OpenAI, HuggingFace, PALM (MakerSuite)). dispatches actual API calls relevant method based class skeleton argument.","code":""},{"path":"/reference/gptstudio_response_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call API — gptstudio_response_process","text":"","code":"gptstudio_response_process(skeleton, ...)"},{"path":"/reference/gptstudio_response_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call API — gptstudio_response_process","text":"skeleton gptstudio_response_skeleton object ... Extra arguments, currently used","code":""},{"path":"/reference/gptstudio_response_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call API — gptstudio_response_process","text":"gptstudio_request_skeleton updated history prompt removed","code":""},{"path":"/reference/gptstudio_response_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call API — gptstudio_response_process","text":"","code":"if (FALSE) { gptstudio_response_process(gptstudio_skeleton) }"},{"path":"/reference/gptstudio_skeleton_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a GPT Studio request skeleton. — gptstudio_skeleton_build","title":"Construct a GPT Studio request skeleton. — gptstudio_skeleton_build","text":"Construct GPT Studio request skeleton.","code":""},{"path":"/reference/gptstudio_skeleton_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a GPT Studio request skeleton. — gptstudio_skeleton_build","text":"","code":"gptstudio_skeleton_build(skeleton, skill, style, task, custom_prompt, ...)"},{"path":"/reference/gptstudio_skeleton_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a GPT Studio request skeleton. — gptstudio_skeleton_build","text":"skeleton GPT Studio request skeleton object. skill skill level user chat conversation. can set \"gptstudio.skill\" option. Default \"gptstudio.skill\" option. Options \"beginner\", \"intermediate\", \"advanced\", \"genius\". style style code use. Applicable styles can retrieved \"gptstudio.code_style\" option. Default \"gptstudio.code_style\" option. Options \"base\", \"tidyverse\", \"preference\". task Specifies task assistant help . Default \"coding\". Others \"general\", \"advanced developer\", \"custom\". custom_prompt custom prompt may used guide AI responses. Default NULL. content provided system prompt. ... Additional arguments.","code":""},{"path":"/reference/gptstudio_skeleton_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a GPT Studio request skeleton. — gptstudio_skeleton_build","text":"updated GPT Studio request skeleton.","code":""},{"path":"/reference/mod_app_server.html","id":null,"dir":"Reference","previous_headings":"","what":"App Server — mod_app_server","title":"App Server — mod_app_server","text":"App Server","code":""},{"path":"/reference/mod_app_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App Server — mod_app_server","text":"","code":"mod_app_server(id, ide_colors = get_ide_theme_info())"},{"path":"/reference/mod_app_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App Server — mod_app_server","text":"id id module ide_colors List containing colors IDE theme.","code":""},{"path":"/reference/mod_app_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"App UI — mod_app_ui","title":"App UI — mod_app_ui","text":"App UI","code":""},{"path":"/reference/mod_app_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App UI — mod_app_ui","text":"","code":"mod_app_ui(id, ide_colors = get_ide_theme_info())"},{"path":"/reference/mod_app_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App UI — mod_app_ui","text":"id id module ide_colors List containing colors IDE theme.","code":""},{"path":"/reference/mod_chat_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Chat server — mod_chat_server","title":"Chat server — mod_chat_server","text":"Chat server","code":""},{"path":"/reference/mod_chat_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chat server — mod_chat_server","text":"","code":"mod_chat_server(   id,   ide_colors = get_ide_theme_info(),   translator = create_translator() )"},{"path":"/reference/mod_chat_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chat server — mod_chat_server","text":"id id module ide_colors List containing colors IDE theme. translator Translator shiny.i18n::Translator","code":""},{"path":"/reference/mod_chat_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Chat UI — mod_chat_ui","title":"Chat UI — mod_chat_ui","text":"Chat UI","code":""},{"path":"/reference/mod_chat_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chat UI — mod_chat_ui","text":"","code":"mod_chat_ui(id, translator = create_translator())"},{"path":"/reference/mod_chat_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chat UI — mod_chat_ui","text":"id id module translator Translator shiny.i18n::Translator","code":""},{"path":"/reference/open_bg_shinyapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Open browser to local Shiny app — open_bg_shinyapp","title":"Open browser to local Shiny app — open_bg_shinyapp","text":"function takes host port local Shiny app opens app default browser.","code":""},{"path":"/reference/open_bg_shinyapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open browser to local Shiny app — open_bg_shinyapp","text":"","code":"open_bg_shinyapp(host, port)"},{"path":"/reference/open_bg_shinyapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open browser to local Shiny app — open_bg_shinyapp","text":"host character string representing IP address domain name server Shiny app hosted. port integer representing port number Shiny app hosted.","code":""},{"path":"/reference/open_bg_shinyapp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open browser to local Shiny app — open_bg_shinyapp","text":"None (opens Shiny app viewer pane browser window)","code":""},{"path":"/reference/openai_create_chat_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text completions using OpenAI's API for Chat — openai_create_chat_completion","title":"Generate text completions using OpenAI's API for Chat — openai_create_chat_completion","text":"Generate text completions using OpenAI's API Chat","code":""},{"path":"/reference/openai_create_chat_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text completions using OpenAI's API for Chat — openai_create_chat_completion","text":"","code":"openai_create_chat_completion(   prompt = \"<|endoftext|>\",   model = getOption(\"gptstudio.model\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   task = \"chat/completions\" )"},{"path":"/reference/openai_create_chat_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text completions using OpenAI's API for Chat — openai_create_chat_completion","text":"prompt prompt generating completions model model use generating text openai_api_key API key accessing OpenAI's API. default, function try use OPENAI_API_KEY environment variable. task task specifies API url use, defaults \"completions\" \"chat/completions\" required ChatGPT model.","code":""},{"path":"/reference/openai_create_chat_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text completions using OpenAI's API for Chat — openai_create_chat_completion","text":"list generated completions information returned API.","code":""},{"path":"/reference/openai_create_chat_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text completions using OpenAI's API for Chat — openai_create_chat_completion","text":"","code":"if (FALSE) { openai_create_completion(   model = \"text-davinci-002\",   prompt = \"Hello world!\" ) }"},{"path":"/reference/openai_stream_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenAI Stream Parse — openai_stream_parse","title":"OpenAI Stream Parse — openai_stream_parse","text":"function handles streaming data OpenAI API. concatenates raw data chunks, attempts parse JSON handles error messages.","code":""},{"path":"/reference/openai_stream_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenAI Stream Parse — openai_stream_parse","text":"","code":"openai_stream_parse(x)"},{"path":"/reference/openai_stream_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenAI Stream Parse — openai_stream_parse","text":"x raw vector representing chunk data API stream.","code":""},{"path":"/reference/openai_stream_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenAI Stream Parse — openai_stream_parse","text":"parsing successful, character string API response returned. case error, error message returned instead.","code":""},{"path":"/reference/openai_stream_parse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OpenAI Stream Parse — openai_stream_parse","text":"function inspired {chattr} R package (https://github.com/mlverse/chattr).","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/prepare_chat_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare chat completion prompt — prepare_chat_history","title":"Prepare chat completion prompt — prepare_chat_history","text":"function prepares chat completion prompt sent OpenAI API. also generates system message according given parameters inserts beginning conversation.","code":""},{"path":"/reference/prepare_chat_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare chat completion prompt — prepare_chat_history","text":"","code":"prepare_chat_history(   history = NULL,   style = getOption(\"gptstudio.code_style\"),   skill = getOption(\"gptstudio.skill\"),   task = \"coding\",   custom_prompt = NULL )"},{"path":"/reference/prepare_chat_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare chat completion prompt — prepare_chat_history","text":"history list previous messages conversation. can include roles 'system', 'user', 'assistant'. System messages discarded. Default NULL.style style code use. Applicable styles can retrieved \"gptstudio.code_style\" option. Default \"gptstudio.code_style\" option. Options \"base\", \"tidyverse\", \"preference\". skill skill level user chat conversation. can set \"gptstudio.skill\" option. Default \"gptstudio.skill\" option. Options \"beginner\", \"intermediate\", \"advanced\", \"genius\". task Specifies task assistant help . Default \"coding\". Others \"general\", \"advanced developer\", \"custom\". custom_prompt custom prompt may used guide AI responses. Default NULL. content provided system prompt.","code":""},{"path":"/reference/prepare_chat_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare chat completion prompt — prepare_chat_history","text":"list first entry initial system message followed non-system entries chat history.","code":""},{"path":"/reference/query_api_anthropic.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that sends a request to the Anthropic API and returns the\nresponse. — query_api_anthropic","title":"A function that sends a request to the Anthropic API and returns the\nresponse. — query_api_anthropic","text":"function sends request Anthropic API returns response.","code":""},{"path":"/reference/query_api_anthropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that sends a request to the Anthropic API and returns the\nresponse. — query_api_anthropic","text":"","code":"query_api_anthropic(request_body, key = Sys.getenv(\"ANTHROPIC_API_KEY\"))"},{"path":"/reference/query_api_anthropic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that sends a request to the Anthropic API and returns the\nresponse. — query_api_anthropic","text":"request_body list contains parameters task. key String containing Anthropic API key. Defaults ANTHROPIC_API_KEY environmental variable specified.","code":""},{"path":"/reference/query_api_anthropic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that sends a request to the Anthropic API and returns the\nresponse. — query_api_anthropic","text":"response API.","code":""},{"path":"/reference/query_api_huggingface.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that sends a request to the HuggingFace API and returns the\nresponse. — query_api_huggingface","title":"A function that sends a request to the HuggingFace API and returns the\nresponse. — query_api_huggingface","text":"function sends request HuggingFace API returns response.","code":""},{"path":"/reference/query_api_huggingface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that sends a request to the HuggingFace API and returns the\nresponse. — query_api_huggingface","text":"","code":"query_api_huggingface(task, request_body, token = Sys.getenv(\"HF_API_KEY\"))"},{"path":"/reference/query_api_huggingface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that sends a request to the HuggingFace API and returns the\nresponse. — query_api_huggingface","text":"task character string specifies task send API. request_body list contains parameters task. token String containing HuggingFace API key. Defaults HF_API_KEY environmental variable specified.","code":""},{"path":"/reference/query_api_huggingface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that sends a request to the HuggingFace API and returns the\nresponse. — query_api_huggingface","text":"response API.","code":""},{"path":"/reference/query_api_palm.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that sends a request to the PALM (MakerSuite) API and returns the\nresponse. — query_api_palm","title":"A function that sends a request to the PALM (MakerSuite) API and returns the\nresponse. — query_api_palm","text":"function sends request PALM (MakerSuite) API returns response.","code":""},{"path":"/reference/query_api_palm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that sends a request to the PALM (MakerSuite) API and returns the\nresponse. — query_api_palm","text":"","code":"query_api_palm(model, request_body, key = Sys.getenv(\"PALM_API_KEY\"))"},{"path":"/reference/query_api_palm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that sends a request to the PALM (MakerSuite) API and returns the\nresponse. — query_api_palm","text":"model character string specifies model send API. request_body list contains parameters task. key String containing PALM (MakerSuite) API key. Defaults PALM_API_KEY environmental variable specified.","code":""},{"path":"/reference/query_api_palm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that sends a request to the PALM (MakerSuite) API and returns the\nresponse. — query_api_palm","text":"response API.","code":""},{"path":"/reference/query_openai_api.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that sends a request to the OpenAI API and returns the response. — query_openai_api","title":"A function that sends a request to the OpenAI API and returns the response. — query_openai_api","text":"function sends request OpenAI API returns response.","code":""},{"path":"/reference/query_openai_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that sends a request to the OpenAI API and returns the response. — query_openai_api","text":"","code":"query_openai_api(   task,   request_body,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"/reference/query_openai_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that sends a request to the OpenAI API and returns the response. — query_openai_api","text":"task character string specifies task send API. request_body list contains parameters task. openai_api_key String containing OpenAI API key. Defaults OPENAI_API_KEY environmental variable specified.","code":""},{"path":"/reference/query_openai_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that sends a request to the OpenAI API and returns the response. — query_openai_api","text":"response API.","code":""},{"path":"/reference/random_port.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random safe port number — random_port","title":"Generate a random safe port number — random_port","text":"function generates random port allowed shiny::runApp.","code":""},{"path":"/reference/random_port.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random safe port number — random_port","text":"","code":"random_port()"},{"path":"/reference/random_port.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random safe port number — random_port","text":"single integer representing randomly selected safe port number.","code":""},{"path":"/reference/request_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Base for a request to the OPENAI API — request_base","title":"Base for a request to the OPENAI API — request_base","text":"function sends request specific OpenAI API task endpoint base URL https://api.openai.com/v1, authenticates API key using Bearer token.","code":""},{"path":"/reference/request_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base for a request to the OPENAI API — request_base","text":"","code":"request_base(task, token = Sys.getenv(\"OPENAI_API_KEY\"))"},{"path":"/reference/request_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base for a request to the OPENAI API — request_base","text":"task character string specifying OpenAI API endpoint task token String containing OpenAI API key. Defaults OPENAI_API_KEY environmental variable specified.","code":""},{"path":"/reference/request_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base for a request to the OPENAI API — request_base","text":"httr2 request object","code":""},{"path":"/reference/request_base_anthropic.html","id":null,"dir":"Reference","previous_headings":"","what":"Base for a request to the Anthropic API — request_base_anthropic","title":"Base for a request to the Anthropic API — request_base_anthropic","text":"function sends request Anthropic API endpoint authenticates API key.","code":""},{"path":"/reference/request_base_anthropic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base for a request to the Anthropic API — request_base_anthropic","text":"","code":"request_base_anthropic(key = Sys.getenv(\"ANTHROPIC_API_KEY\"))"},{"path":"/reference/request_base_anthropic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base for a request to the Anthropic API — request_base_anthropic","text":"key String containing Anthropic API key. Defaults ANTHROPIC_API_KEY environmental variable specified.","code":""},{"path":"/reference/request_base_anthropic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base for a request to the Anthropic API — request_base_anthropic","text":"httr2 request object","code":""},{"path":"/reference/request_base_huggingface.html","id":null,"dir":"Reference","previous_headings":"","what":"Base for a request to the HuggingFace API — request_base_huggingface","title":"Base for a request to the HuggingFace API — request_base_huggingface","text":"function sends request specific HuggingFace API endpoint authenticates API key using Bearer token.","code":""},{"path":"/reference/request_base_huggingface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base for a request to the HuggingFace API — request_base_huggingface","text":"","code":"request_base_huggingface(task, token = Sys.getenv(\"HF_API_KEY\"))"},{"path":"/reference/request_base_huggingface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base for a request to the HuggingFace API — request_base_huggingface","text":"task character string specifying HuggingFace API endpoint task token String containing HuggingFace API key. Defaults HF_API_KEY environmental variable specified.","code":""},{"path":"/reference/request_base_huggingface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base for a request to the HuggingFace API — request_base_huggingface","text":"httr2 request object","code":""},{"path":"/reference/request_base_palm.html","id":null,"dir":"Reference","previous_headings":"","what":"Base for a request to the PALM (MakerSuite) API — request_base_palm","title":"Base for a request to the PALM (MakerSuite) API — request_base_palm","text":"function sends request specific PALM (MakerSuite) API endpoint authenticates API key.","code":""},{"path":"/reference/request_base_palm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base for a request to the PALM (MakerSuite) API — request_base_palm","text":"","code":"request_base_palm(model, key = Sys.getenv(\"PALM_API_KEY\"))"},{"path":"/reference/request_base_palm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base for a request to the PALM (MakerSuite) API — request_base_palm","text":"model character string specifying PALM (MakerSuite) API model key String containing PALM (MakerSuite) API key. Defaults PALM_API_KEY environmental variable specified.","code":""},{"path":"/reference/request_base_palm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Base for a request to the PALM (MakerSuite) API — request_base_palm","text":"httr2 request object","code":""},{"path":"/reference/rgb_str_to_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"RGB str to hex — rgb_str_to_hex","title":"RGB str to hex — rgb_str_to_hex","text":"RGB str hex","code":""},{"path":"/reference/rgb_str_to_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RGB str to hex — rgb_str_to_hex","text":"","code":"rgb_str_to_hex(rgb_string)"},{"path":"/reference/rgb_str_to_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RGB str to hex — rgb_str_to_hex","text":"rgb_string RGB string returned rstudioapi::getThemeInfo()","code":""},{"path":"/reference/rgb_str_to_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RGB str to hex — rgb_str_to_hex","text":"hex color","code":""},{"path":"/reference/run_app_as_bg_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an R Shiny app in the background — run_app_as_bg_job","title":"Run an R Shiny app in the background — run_app_as_bg_job","text":"function runs R Shiny app background job using specified directory, name, host, port.","code":""},{"path":"/reference/run_app_as_bg_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an R Shiny app in the background — run_app_as_bg_job","text":"","code":"run_app_as_bg_job(appDir = \".\", job_name, host, port)"},{"path":"/reference/run_app_as_bg_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an R Shiny app in the background — run_app_as_bg_job","text":"appDir application run. one following: directory containing server.R, plus, either ui.R www directory contains file index.html. directory containing app.R. .R file containing Shiny application, ending expression produces Shiny app object. list ui server components. Shiny app object created shinyApp(). job_name name background job created host IPv4 address application listen . Defaults shiny.host option, set, \"127.0.0.1\" . See Details. port TCP port application listen . port specified, shiny.port option set (options(shiny.port = XX)), port used. Otherwise, use random port 3000:8000, excluding ports blocked Google Chrome considered unsafe: 3659, 4045, 5060, 5061, 6000, 6566, 6665:6669 6697. twenty random ports tried.","code":""},{"path":"/reference/run_app_as_bg_job.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an R Shiny app in the background — run_app_as_bg_job","text":"function returns nothing meant run app side effect.","code":""},{"path":"/reference/run_chatgpt_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the ChatGPT app — run_chatgpt_app","title":"Run the ChatGPT app — run_chatgpt_app","text":"starts chatgpt app. exported able run R script.","code":""},{"path":"/reference/run_chatgpt_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the ChatGPT app — run_chatgpt_app","text":"","code":"run_chatgpt_app(   ide_colors = get_ide_theme_info(),   host = getOption(\"shiny.host\", \"127.0.0.1\"),   port = getOption(\"shiny.port\") )"},{"path":"/reference/run_chatgpt_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the ChatGPT app — run_chatgpt_app","text":"ide_colors List containing colors IDE theme. host IPv4 address application listen . Defaults shiny.host option, set, \"127.0.0.1\" . See Details. port TCP port application listen . port specified, shiny.port option set (options(shiny.port = XX)), port used. Otherwise, use random port 3000:8000, excluding ports blocked Google Chrome considered unsafe: 3659, 4045, 5060, 5061, 6000, 6566, 6665:6669 6697. twenty random ports tried.","code":""},{"path":"/reference/run_chatgpt_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the ChatGPT app — run_chatgpt_app","text":"Nothing.","code":""},{"path":"/reference/stream_chat_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Stream Chat Completion — stream_chat_completion","title":"Stream Chat Completion — stream_chat_completion","text":"stream_chat_completion sends prepared chat completion request OpenAI API retrieves streamed response. results stored temporary file.","code":""},{"path":"/reference/stream_chat_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stream Chat Completion — stream_chat_completion","text":"","code":"stream_chat_completion(   prompt,   model = \"gpt-3.5-turbo\",   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"/reference/stream_chat_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stream Chat Completion — stream_chat_completion","text":"prompt list messages. message list includes \"role\" \"content\". \"role\" can \"system\", \"user\", \"assistant\". \"content\" text message role. model character string specifying model use chat completion. default model \"gpt-3.5-turbo\". openai_api_key character string OpenAI API key. default, fetched \"OPENAI_API_KEY\" environment variable. Please note OpenAI API key sensitive information treated accordingly.","code":""},{"path":"/reference/stream_chat_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stream Chat Completion — stream_chat_completion","text":"character string specifying path tempfile contains full response OpenAI API.","code":""},{"path":"/reference/stream_chat_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stream Chat Completion — stream_chat_completion","text":"","code":"if (FALSE) { # Get API key from your environment variables openai_api_key <- Sys.getenv(\"OPENAI_API_KEY\")  # Define the prompt prompt <- list(   list(role = \"system\", content = \"You are a helpful assistant.\"),   list(role = \"user\", content = \"Who won the world series in 2020?\") )  # Call the function result <- stream_chat_completion(prompt = prompt, openai_api_key = openai_api_key)  # Print the result print(result) }"},{"path":"/reference/streamingMessage-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for streamingMessage — streamingMessage-shiny","title":"Shiny bindings for streamingMessage — streamingMessage-shiny","text":"Output render functions using streamingMessage within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/streamingMessage-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for streamingMessage — streamingMessage-shiny","text":"","code":"streamingMessageOutput(outputId, width = \"100%\", height = NULL)  renderStreamingMessage(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/streamingMessage-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for streamingMessage — streamingMessage-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates streamingMessage env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/streamingMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Streaming message — streamingMessage","title":"Streaming message — streamingMessage","text":"Places invisible empty chat message hold streaming message. can reset dynamically inside shiny app","code":""},{"path":"/reference/streamingMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Streaming message — streamingMessage","text":"","code":"streamingMessage(   ide_colors = get_ide_theme_info(),   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"/reference/streamingMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Streaming message — streamingMessage","text":"ide_colors List containing colors IDE theme. width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. elementId element's id","code":""},{"path":"/reference/style_chat_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Style Chat History — style_chat_history","title":"Style Chat History — style_chat_history","text":"function processes chat history, filters system messages, formats remaining messages appropriate styling.","code":""},{"path":"/reference/style_chat_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style Chat History — style_chat_history","text":"","code":"style_chat_history(history, ide_colors = get_ide_theme_info())"},{"path":"/reference/style_chat_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style Chat History — style_chat_history","text":"history list chat messages elements containing 'role' 'content'. ide_colors List containing colors IDE theme.","code":""},{"path":"/reference/style_chat_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style Chat History — style_chat_history","text":"list formatted chat messages styling applied, excluding system messages.","code":""},{"path":"/reference/style_chat_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Style Chat History — style_chat_history","text":"","code":"chat_history_example <- list(   list(role = \"user\", content = \"Hello, World!\"),   list(role = \"system\", content = \"System message\"),   list(role = \"assistant\", content = \"Hi, how can I help?\") )  if (FALSE) { style_chat_history(chat_history_example) }"},{"path":"/reference/style_chat_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Style chat message — style_chat_message","title":"Style chat message — style_chat_message","text":"Style message based role author.","code":""},{"path":"/reference/style_chat_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style chat message — style_chat_message","text":"","code":"style_chat_message(message, ide_colors = get_ide_theme_info())"},{"path":"/reference/style_chat_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style chat message — style_chat_message","text":"message chat message. ide_colors List containing colors IDE theme.","code":""},{"path":"/reference/style_chat_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style chat message — style_chat_message","text":"HTML element.","code":""},{"path":"/reference/text_area_input_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom textAreaInput — text_area_input_wrapper","title":"Custom textAreaInput — text_area_input_wrapper","text":"Modified version textAreaInput() removes label container. used mod_prompt_ui()","code":""},{"path":"/reference/text_area_input_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom textAreaInput — text_area_input_wrapper","text":"","code":"text_area_input_wrapper(   inputId,   label,   value = \"\",   width = NULL,   height = NULL,   cols = NULL,   rows = NULL,   placeholder = NULL,   resize = NULL,   textarea_class = NULL )"},{"path":"/reference/text_area_input_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom textAreaInput — text_area_input_wrapper","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value. width width input, e.g. '400px', '100%'; see validateCssUnit(). height height input, e.g. '400px', '100%'; see validateCssUnit(). cols Value visible character columns input, e.g. 80. argument take effect CSS width rule defined element; rule come width argument function containing page layout fluidPage(). rows value visible character rows input, e.g. 6. height argument specified, height take precedence browser's rendering. placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option. resize directions textarea box can resized. Can one \"\", \"none\", \"vertical\", \"horizontal\". default, NULL, use client browser's default setting resizing textareas. textarea_class Class applied textarea element","code":""},{"path":"/reference/text_area_input_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom textAreaInput — text_area_input_wrapper","text":"modified textAreaInput","code":""},{"path":"/reference/welcomeMessage-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for welcomeMessage — welcomeMessage-shiny","title":"Shiny bindings for welcomeMessage — welcomeMessage-shiny","text":"Output render functions using welcomeMessage within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/welcomeMessage-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for welcomeMessage — welcomeMessage-shiny","text":"","code":"welcomeMessageOutput(outputId, width = \"100%\", height = NULL)  renderWelcomeMessage(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/welcomeMessage-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for welcomeMessage — welcomeMessage-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates welcomeMessage env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/welcomeMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Welcome message — welcomeMessage","title":"Welcome message — welcomeMessage","text":"HTML widget showing welcome message chat app. created able bind message shiny event trigger new render.","code":""},{"path":"/reference/welcomeMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welcome message — welcomeMessage","text":"","code":"welcomeMessage(   ide_colors = get_ide_theme_info(),   translator = create_translator(),   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"/reference/welcomeMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welcome message — welcomeMessage","text":"ide_colors List containing colors IDE theme. translator Translator shiny.i18n::Translator width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. elementId element's id","code":""},{"path":[]},{"path":"/news/index.html","id":"persistent-config-file-0-3-0","dir":"Changelog","previous_headings":"","what":"Persistent Config File","title":"What’s New in Version 0.3.0","text":"’ve introduced configuration file persists across sessions. Now, preferred app settings loaded time launch app, making even user-friendly.","code":""},{"path":"/news/index.html","id":"custom-prompt-selection-0-3-0","dir":"Changelog","previous_headings":"","what":"Custom Prompt Selection","title":"What’s New in Version 0.3.0","text":"enhancing customization, ’ve added “task” option lets choose system prompt options “coding”, “general”, “advanced developer”, “custom”. “custom” option allows replace system prompt instructions entirely.","code":""},{"path":"/news/index.html","id":"expanded-api-services-0-3-0","dir":"Changelog","previous_headings":"","what":"Expanded API Services","title":"What’s New in Version 0.3.0","text":"’re excited announce service now includes models HuggingFace’s inference API, Anthropic’s claude models, Google’s MakerSuite, Azure OpenAI service broadening range AI solutions can use.","code":""},{"path":"/news/index.html","id":"s3-class-for-api-services-0-3-0","dir":"Changelog","previous_headings":"","what":"S3 Class for API Services","title":"What’s New in Version 0.3.0","text":"effort make future API additions easier, API calls now use S3 classes.","code":""},{"path":"/news/index.html","id":"real-time-streaming-updates-0-3-0","dir":"Changelog","previous_headings":"","what":"Real-time Streaming Updates","title":"What’s New in Version 0.3.0","text":"Inspired Edgar Ruiz’s work chattr, ’ve implemented real-time streaming without relying R6, receive attention 0.4.0 release.","code":""},{"path":"/news/index.html","id":"model-selection-feature-0-3-0","dir":"Changelog","previous_headings":"","what":"Model Selection Feature","title":"What’s New in Version 0.3.0","text":"ChatGPT add-now comes integrated model selection feature, enabling choose chat completion model matches either gpt-3.5 gpt-4 model name.","code":""},{"path":"/news/index.html","id":"upgraded-add-ins-0-3-0","dir":"Changelog","previous_headings":"","what":"Upgraded Add-ins","title":"What’s New in Version 0.3.0","text":"add-ins code commenting spelling & grammar checking upgraded use chat/completions endpoint now default gpt-3.5-turbo model. can modify default setting needed.","code":""},{"path":"/news/index.html","id":"custom-openai-base-url-0-3-0","dir":"Changelog","previous_headings":"","what":"Custom OpenAI Base Url","title":"What’s New in Version 0.3.0","text":"now option specify different base url OpenAI API. much-requested feature users, addition helps tailoring API access suit needs.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"What’s New in Version 0.3.0","text":"’ve addressed several issues update. Now, “Spelling Grammar” “Comment code” add-ins can successfully insert text source. Also, installation issues related {stringr} package compatibility earlier versions R resolved.","code":""},{"path":"/news/index.html","id":"improved-compatibility-checks-0-3-0","dir":"Changelog","previous_headings":"","what":"Improved Compatibility Checks","title":"What’s New in Version 0.3.0","text":"ensure optimal user experience, ’re now using GitHub Actions check compatibility wider range R versions Ubuntu. hope enjoy enhanced features improved performance latest version. always, feedback invaluable us, please keep coming!","code":""},{"path":"/news/index.html","id":"gptstudio-020","dir":"Changelog","previous_headings":"","what":"gptstudio 0.2.0","title":"gptstudio 0.2.0","text":"CRAN release: 2023-05-30","code":""},{"path":"/news/index.html","id":"translations-0-2-0","dir":"Changelog","previous_headings":"","what":"Translations","title":"gptstudio 0.2.0","text":"ChatGPT addin can now receive translations. anyone wants contribute new translation needs edit translation file (“inst/translations/translation.json”). Currently supported languages English Spanish.","code":""},{"path":"/news/index.html","id":"httr2-0-2-0","dir":"Changelog","previous_headings":"","what":"{httr2}","title":"gptstudio 0.2.0","text":"requests now handled httr2 functions. provides intuitive way extend functionality package, meaning new request parameters endpoint one pipe away implemented.","code":""},{"path":"/news/index.html","id":"stream-chat-completions-0-2-0","dir":"Changelog","previous_headings":"","what":"Stream chat completions","title":"gptstudio 0.2.0","text":"Instead waiting full response received showing user, chat app now streams response generation real time. makes shorter wait times removes need use waiter.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"gptstudio 0.2.0","text":"welcome message longer consumed chat history. Errors requests now point OpenAI documentation. chat app, removed unnecessary whitespace first line code chunks. chat app, Enter key can now used send user instruction alternative clicking “Send” button. chat app, copy button now added via JS instead previous fragile R implementation. (@idavydov)","code":""},{"path":"/news/index.html","id":"new-look-of-the-message-history-0-2-0","dir":"Changelog","previous_headings":"","what":"New look of the message history","title":"gptstudio 0.2.0","text":"individual message now rounded icon indicating whether comes user assistant. role different horizontal aligment slightly different background color. image","code":""},{"path":"/news/index.html","id":"simplified-user-inputs-0-2-0","dir":"Changelog","previous_headings":"","what":"Simplified user inputs","title":"gptstudio 0.2.0","text":"prompt buttons simplified give chat room expand. image Now app settings button user can still choose skill level prefered style. image","code":""},{"path":"/news/index.html","id":"welcome-message-with-instructions-0-2-0","dir":"Changelog","previous_headings":"","what":"Welcome message with instructions","title":"gptstudio 0.2.0","text":"app starts (history cleared) assistant greets user random welcome message instructions use app. image","code":""},{"path":"/news/index.html","id":"the-chat-can-be-adjusted-vertically-horizontally-and-is-scrollable-0-2-0","dir":"Changelog","previous_headings":"","what":"The chat can be adjusted vertically, horizontally and is scrollable","title":"gptstudio 0.2.0","text":"Limited 800px width. prompt input always fixed bottom app. https://user-images.githubusercontent.com/19418298/233140923-5787ee5e-1042-4e84-8a42-6f1a55a47801.mp4","code":""},{"path":"/news/index.html","id":"the-chat-inherits-the-current-rstudio-theme-0-2-0","dir":"Changelog","previous_headings":"","what":"The chat inherits the current rstudio theme","title":"gptstudio 0.2.0","text":"makes look integrated IDE, giving feel extension VScode. https://user-images.githubusercontent.com/19418298/233145316-5efe0e77-2192-48e6-97a1-02d87bd37255.mp4","code":""},{"path":"/news/index.html","id":"copy-to-clipboard-button-in-code-chunks-0-2-0","dir":"Changelog","previous_headings":"","what":"Copy to clipboard button in code chunks","title":"gptstudio 0.2.0","text":"Every code chunk now top bar indicating language code displayed “Copy” button. user clicks button writes code clipboard shows short “Copied” feedback button.","code":""},{"path":"/news/index.html","id":"custom-scrollbar-0-2-0","dir":"Changelog","previous_headings":"","what":"Custom scrollbar","title":"gptstudio 0.2.0","text":"app uses now narrower grey scrollbar.","code":""},{"path":"/news/index.html","id":"gptstudio-010","dir":"Changelog","previous_headings":"","what":"gptstudio 0.1.0","title":"gptstudio 0.1.0","text":"CRAN release: 2023-03-20 Added NEWS.md file track changes package.","code":""}]
