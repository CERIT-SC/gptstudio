% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_calls.R
\name{call_api}
\alias{call_api}
\title{Call API}
\usage{
call_api(
  endpoint,
  prompt,
  history = NULL,
  model = NULL,
  style = NULL,
  skill = NULL,
  ...
)
}
\arguments{
\item{endpoint}{A character string defining the API endpoint. The class of this argument determines the method to be used.}

\item{prompt}{A character string containing the input for the AI model.}

\item{history}{A character string or a list of strings providing the conversational history for context (defaults to NULL).}

\item{model}{A character string specifying the AI model to be used (defaults to NULL, which means the default model for each API is used).}

\item{style}{A character string defining the model's writing style (only applicable to some APIs; defaults to NULL).}

\item{skill}{A numeric value indicating the skill level of the AI model (only applicable to some APIs; defaults to NULL).}

\item{...}{Additional arguments passed on to the method.}
}
\value{
Depends on the method. Could be a character string (response from the AI), a list (structured response), or NULL (in case of unimplemented services).
}
\description{
This function provides a generic interface for calling different AI APIs (OpenAI, HuggingFace, MakerSuite).
It dispatches the actual API calls to the relevant method based on the \code{class} of the \code{endpoint} argument.
}
\examples{
\dontrun{
call_api("openai", "Hello, how are you?")
}
}
